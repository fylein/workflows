name: Jscpd Duplication Check

on:
  workflow_call:
    inputs:
      duplication_threshold:
        description: 'Threshold percentage for code duplication'
        required: true
        type: number
      reviewer_1:
        description: 'First reviewer who can approve high duplication PRs'
        required: true
        type: string
      reviewer_2:
        description: 'Second reviewer who can approve high duplication PRs'
        required: true
        type: string
      tech_stack:
        description: 'Tech stack to check for duplication'
        required: true
        type: string
      command_to_run:
        description: 'Command to run JSCPD'
        required: true
        type: string
    secrets:
      github-token:
        description: 'GitHub token for creating/updating comments'
        required: true

jobs:
  duplication-check:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write 
      contents: read

    env:
      DUPLICATION_THRESHOLD: ${{ inputs.duplication_threshold }}
      REVIEWER_1: ${{ inputs.reviewer_1 }}
      REVIEWER_2: ${{ inputs.reviewer_2 }}
      GITHUB_TOKEN: ${{ secrets.github-token }}

    steps:
      - uses: actions/checkout@v4

      - name: Run jscpd for ${{ inputs.tech_stack }}
        run: |
          ${{ inputs.command_to_run }}
          cat report/jscpd-report.json

      - name: Extract duplication percentage - ${{ inputs.tech_stack }}
        id: duplication
        run: |
          percent=$(jq .statistics.total.percentageTokens report/jscpd-report.json)
          echo "duplication=$percent" >> "$GITHUB_OUTPUT"

      - name: Post duplication comment - ${{ inputs.tech_stack }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = JSON.parse(fs.readFileSync('report/jscpd-report.json', 'utf8'));
            const summary = `### 🔁 Code Duplication Report - ${process.env.TECH_STACK}\n**Duplicated Code:** ${report.statistics.total.percentageTokens}%\n`;
            github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: summary
            });

      - name: Check PR approvals for bypass
        id: reviewers
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const prNumber = context.payload.pull_request.number;
            const reviews = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
            });

            const reviewer1 = process.env.REVIEWER_1.toLowerCase();
            const reviewer2 = process.env.REVIEWER_2.toLowerCase();

            const approved = reviews.data.some(r => 
              r.state === "APPROVED" && 
              [reviewer1, reviewer2].includes(r.user.login.toLowerCase())
            );

            core.setOutput('approved_by_reviewer', approved);
            return approved;

      - name: Comment if duplication > threshold and not approved
        if: fromJSON(steps.duplication.outputs.duplication) > env.DUPLICATION_THRESHOLD && steps.reviewers.outputs.approved_by_reviewer == 'false'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: `❌ ${process.env.TECH_STACK} Duplication threshold crosses beyond ${process.env.DUPLICATION_THRESHOLD}%. Please check for potential code duplication. If it is critical, please take approvals from **${process.env.REVIEWER_1}** or **${process.env.REVIEWER_2}** for merging the pull request. Once approved, you can re-run the workflow.`
            });

      - name: Fail if duplication > threshold and not approved
        if: fromJSON(steps.duplication.outputs.duplication) > env.DUPLICATION_THRESHOLD && steps.reviewers.outputs.approved_by_reviewer == 'false'
        run: |
          echo "Duplication threshold crosses beyond ${DUPLICATION_THRESHOLD}%. Please check for potential code duplication. If it is critical, please take approvals from ${REVIEWER_1} or ${REVIEWER_2} for merging the pull request. Once approved, you can re-run the workflow."
          exit 1
